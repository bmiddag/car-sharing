package objects;

import java.text.SimpleDateFormat;
import java.util.EnumMap;

/**
 * Message class representing mails/notifications to be sent.
 */
public class Notification extends DataObject {

    public enum Field implements DataObject.DataField {
	
	ID(Integer.class, true, false),
	USER(Integer.class), 
	SUBJECT(String.class), 
	CONTENT(String.class), 
	SEEN(Boolean.class), 
	TIME(Long.class, false, true);

	private final boolean stamp;
        private final boolean key;
        private final Class type;

        private Field(Class type, boolean key, boolean stamp) {
            this.type = type;
            this.key = key;
            this.stamp = stamp;
        }

        private Field(Class type) {
            this.type = type;
            this.key = false;
            this.stamp = false;
        }

        @Override
        public Class getType() {
            return type;
        }

        @Override
        public boolean isKey() {
            return key;
        }

        @Override
        public boolean isStamp() {
            return stamp;
        }

    }

    /**
     *
     * @param id the id generated by db
     * @param user the user who posted the message
     * @param subject the subject of the message
     * @param content the content of the message
     * @param time the time at which the message was posted
     */
    public Notification(Integer id, Integer user, String subject, String content, Boolean seen, Long time) {
        super(new EnumMap<>(Field.class));

        data.put(Field.ID, id);
        data.put(Field.USER, user);
        data.put(Field.SUBJECT, subject);
        data.put(Field.CONTENT, content);
        data.put(Field.TIME, time);
        data.put(Field.SEEN, seen);

    }
    
    

    /**
     *
     * @param format of the date
     * @return date formated to string
     */
    public String getFormattedDate(String format) {
        return new SimpleDateFormat(format).format(data.get(Field.TIME));
    }

    /**
     *
     * @return the id assigned by the db
     */
    public Integer getId() {
        return (Integer) data.get(Field.ID);
    }

    /**
     *
     * @return the user who posted the message
     */
    public Integer getUser() {
        return (Integer) data.get(Field.USER);
    }

    /**
     *
     * @return the subject of the message
     */
    public String getSubject() {
        return (String) data.get(Field.SUBJECT);
    }

    /**
     *
     * @return the content of the message
     */
    public String getContent() {
        return (String) data.get(Field.CONTENT);
    }

    /**
     *
     * @return the time at which the message was posted
     */
    public Long getTime() {
        return (Long) data.get(Field.TIME);
    }

    public Boolean isSeen() {
        return (Boolean) data.get(Field.SEEN);
    }

    public void setSeen(Boolean seen) {
        data.put(Field.SEEN, seen);
    }

    /**
     *
     * @param subject the subject of the message
     */
    public void setSubject(String subject) {
        data.put(Field.SUBJECT, subject);
    }

    /**
     *
     * @param content the content of the message
     */
    public void setContent(String content) {
        data.put(Field.CONTENT, content);
    }
    
}
