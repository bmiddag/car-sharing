package objects;

import exceptions.DataAccessException;
import interfaces.DataAccessContext;
import java.util.EnumMap;
import jdbc.JDBCDataAccessProvider;
import objects.DataObject.DataField;

/**
 * A Place, i.e. a town or city having a zip code.
 */
public class Place extends DataObject/*<Place.Field>*/ {

    public enum Field implements DataField {

	ID(Integer.class, true, false),
	NAME(String.class), 
	ZIP(String.class), 
	COUNTRY(String.class);

	private final boolean stamp;
	private final boolean key;
	private final Class type;

	private Field(Class type, boolean key, boolean stamp) {
		this.type = type;
		this.key = key;
		this.stamp = stamp;
	}
	
	private Field(Class type) {
		this.type = type;
		this.key = false;
		this.stamp = false;
	}
	
	@Override
	public Class getType() {
		return type;
	}

	@Override
	public boolean isKey() {
		return key;
	}

	@Override
	public boolean isStamp() {
		return stamp;
	}

    }

    /**
     * @param id the id generated by the db
     * @param name the name of this place
     * @param zip the zip/postal code of the place
     * @param countrycode code of the country
     */
    public Place(Integer id, String name, String zip, String countrycode) {
        super(new EnumMap<>(Field.class)); // super(Field.class);
        data.put(Field.ID, id);
        data.put(Field.NAME, name);
        data.put(Field.ZIP, zip);
        data.put(Field.COUNTRY, countrycode);
    }
    
    
    
    public Place() {
        super(new EnumMap<>(Field.class));
    }

    /**
     *
     * @return the id generated by the db
     */
    public Integer getId() {
        return getData(Field.ID);
    }

    /**
     *
     * @return the name of this place
     */
    public String getName() {
        return getData(Field.NAME);
    }

    /**
     *
     * @return the zip or postal code
     */
    public String getZip() {
        return getData(Field.ZIP);
    }

    /**
     *
     * @param name the name of this place
     */
    public void setName(String name) {
        data.put(Field.NAME, name);
    }

    /**
     *
     * @return the country code
     */
    public String getCountryCode() {
        return getData(Field.COUNTRY);
    }

    /**
     *
     * @return the country code
     * @throws exceptions.DataAccessException
     */
    public Country getCountry() throws DataAccessException {
        try (DataAccessContext dac = JDBCDataAccessProvider.getDataAccessProvider().getDataAccessContext()) {
            return dac.getCountryDAO().getCountry((String)getData(Field.COUNTRY));            
        }
    }

    /**
     *
     * @param countrycode the country code of this place
     */
    public void setCountry(String countrycode) {
        data.put(Field.COUNTRY, countrycode);
    }

    /**
     *
     * @param zip the zip code or postal code
     */
    public void setZip(String zip) {
        data.put(Field.ZIP, zip);
    }

}
